<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:tx="http://www.springframework.org/schema/tx"
	 xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
    http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/mvc/
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd ">
      
    <!-- 自动扫描 -->
	 <context:component-scan base-package="com.mao"/> 
	<!-- 引入配置文件 -->
	<!-- <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		初始化连接大小
		<property name="initialSize" value="${initialSize}"></property>
		连接池最大数量
		<property name="maxActive" value="${maxActive}"></property>
		连接池最大空闲
		<property name="maxIdle" value="${maxIdle}"></property>
		连接池最小空闲
		<property name="minIdle" value="${minIdle}"></property>
	   	获取连接最大等待时间
		<property name="maxWait" value="${maxWait}"></property>
	</bean>  -->

	   <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> -->
	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/labequmagsystem?useUnicode=true&amp;characterEncoding=UTF8"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
		 <property name="maxActive" value="2" />  
        <property name="initialSize" value="1" />  
        <property name="maxIdle" value="2" />  
        <property name="minIdle" value="1" />  
        等待连接超时时间，30秒  
        <property name="maxWait" value="30000" /> -->
        
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/labequmagsystem?useUnicode=true&amp;characterEncoding=UTF8" />
		<property name="user" value="root" />
		<property name="password" value="root" />
		<property name="maxPoolSize" value="50"/>
		<property name="maxIdleTime" value="50" />
		<property name="minPoolSize" value="5"/> 
		<property name="initialPoolSize" value="5" />
	</bean >

<!-- 使用指定的 dataSource 创建 SqlSessionFactory,并且指定Mybatis的配置文件，  
         同时，MyBatis中的Enviroment 配置段在容器中不会生效，使用指定的 dataSource。  
    -->  
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		

		<property name="configLocation" value="classpath:/mybatis.xml"/>
		<!-- 该属性用来指定MyBatis的XML配置文件路径,跟Spring整合时，编写MyBatis映射文件的目的无非是配置一下typeAlias、setting之类的 
			元素。不用在其中指定数据源，或者事务处理方式。就算配置了也会被忽略。因为这些都是使用Spring中的配置 。当然如果你不打算添加typeAlias 
			之类的设置的话，你连MyBatis的配置文件都不用写，更不用配置这个属性了 -->
 
 		<property name="dataSource" ref="dataSource" />
 		
		 <property name="mapperLocations" value="classpath*:com/mao/mapper/*.xml"/>  
		
		<!-- 该配置文件用来指定Mapper映射文件的位置 ，如果映射文件与相应的接口同名，且在同一路径下，那么可以不配置该选项 -->
	</bean>

	<!--注册Mapper方式一 -->
	<!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="com.mao.dao.UserMapper"/> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/> 
	</bean> --> 

	<!-- 注册Mapper方式二：也可不指定特定mapper，而使用自动扫描包的方式来注册各种Mapper ，配置如下： -->
	  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mao.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean> 

	<!-- (事务管理器)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	
</beans>